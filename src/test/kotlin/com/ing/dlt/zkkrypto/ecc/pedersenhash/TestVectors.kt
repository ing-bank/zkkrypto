package com.ing.dlt.zkkrypto.ecc.pedersenhash

import com.ing.dlt.zkkrypto.util.BitArray

object TestVectors {

    // ! Test vectors from https://github.com/zcash-hackworks/zcash-test-vectors/blob/master/sapling_pedersen.py

    val jubjub = listOf(

        TestVector(
            personalization = Personalization.NoteCommitment,
            input_bits = BitArray.fromString("111111"),
            hash_x = "06b1187c11ca4fb4383b2e0d0dbbde3ad3617338b5029187ec65a5eaed5e4d0b",
            hash_y = "3ce70f536652f0dea496393a1e55c4e08b9d55508e16d11e5db40d4810cbc982"
        ),
        TestVector(
            personalization = Personalization.NoteCommitment,
            input_bits = BitArray.fromString("1111110"),
            hash_x = "2fc3bc454c337f71d4f04f86304262fcbfc9ecd808716b92fc42cbe6827f7f1a",
            hash_y = "46d0d25bf1a654eedc6a9b1e5af398925113959feac31b7a2c036ff9b9ec0638"
        ),
        TestVector(
            personalization = Personalization.NoteCommitment,
            input_bits = BitArray.fromString("1111111"),
            hash_x = "4f8ce0e0a9e674b3ab9606a7d7aefba386e81583d81918127814cde41d209d97",
            hash_y = "312b5ab93b14c9b9af334fe1fe3c50fffb53fbd074fa40ca600febde7c97e346"
        ),
        TestVector(
            personalization = Personalization.NoteCommitment,
            input_bits = BitArray.fromString("111111100"),
            hash_x = "4f8ce0e0a9e674b3ab9606a7d7aefba386e81583d81918127814cde41d209d97",
            hash_y = "312b5ab93b14c9b9af334fe1fe3c50fffb53fbd074fa40ca600febde7c97e346"
        ),
        TestVector(
            personalization = Personalization.NoteCommitment,
            input_bits = BitArray.fromString("111111101101000010000011001000000010111010111010110000010111011101000100111001011011001000000011000000001101111111010011000111101000110010101101101101111101000001011101011110101000010000"),
            hash_x = "599ab788360ae8c6d5bb7618aec37056d6227408d857fdc394078a3d7afdfe0f",
            hash_y = "4320c373da670e28d168f4ffd72b43208e8c815f40841682c57a3ee1d005a527"
        ),
        TestVector(
            personalization = Personalization.NoteCommitment,
            input_bits = BitArray.fromString(
                "1111111000001111011100011100" +
                    "0010000100111010110100011010" +
                    "0001000000101000101111101110" +
                    "1011100100110100110111000011" +
                    "1011001100101001011111111100" +
                    "0010111010011111001010100110" +
                    "100010100101010101000"
            ),
            hash_x = "2da510317620f5dfdce1f31db6019f947eedcf02ff2972cff597a5c3ad21f5dd",
            hash_y = "198789969c0c33e6c359b9da4a51771f4d50863f36beef90436944fe568399f2"
        ),
        TestVector(
            personalization = Personalization.NoteCommitment,
            input_bits = BitArray.fromString(
                "1111111010001101000100010000" +
                    "0011000001111100001110001110" +
                    "1100111110010101000010110110" +
                    "0111110100010101000011000000" +
                    "0011100101100001100100100100" +
                    "0000101101111101111011000110" +
                    "0111100001011111000011"
            ),
            hash_x = "601247c7e640992d193dfb51df6ed93446687a7f2bcd0e4a598e6feb1ef20c40",
            hash_y = "371931733b73e7b95c2cad55a6cebd15c83619f697c64283e54e5ef61442a743"
        ),
        TestVector(
            personalization = Personalization.NoteCommitment,
            input_bits = BitArray.fromString(
                "1111111100100100101000000110" +
                    "0101111010110011100001100100" +
                    "1110010011101110110100000111" +
                    "0111110011111100011011001010" +
                    "1110100000100111000101110001" +
                    "1011100000110100000111101011" +
                    "0001000011010101111100010101" +
                    "1100100110001100110101100100" +
                    "1111011110011100010100010010" +
                    "0010000110000000010111011000" +
                    "1000110110010000101001010010" +
                    "1011011001011111000010001000" +
                    "0000010101111001011110101110" +
                    "1101011110100110001001101110" +
                    "0000111001010100010011101111" +
                    "1001000001000010110101010110" +
                    "0011001011100100010001111101" +
                    "0000111011111110111101000010" +
                    "1001000110010001100100110101" +
                    "0001011010001110100110010001" +
                    "0000001011011010100010101011" +
                    "1000100010000101100110101101" +
                    "1110101001111000101111110101" +
                    "0011111101011110110101010010" +
                    "0010101100011111010100100010" +
                    "1101000001001010010001101011" +
                    "1100110100100000010000000111"
            ),
            hash_x = "314192ecb1f2d8806a8108704c875a25d9fb7e444f9f373919adedebe8f2ae27",
            hash_y = "6b12b32f1372ad574799dee9eb591d961b704bf611f55fcc71f7e82cd3330b74"
        ),
        TestVector(
            personalization = Personalization.NoteCommitment,
            input_bits = BitArray.fromString(
                "1111111100110101110101110010" +
                    "0111010000000101010110000110" +
                    "1111001110000110110010101101" +
                    "1001001000100011101011001011" +
                    "0000111101001010010100001001" +
                    "0110001111001110011101011010" +
                    "0110110001100110010111010110" +
                    "0111100001011011010010011010" +
                    "1011101110101100010101110101" +
                    "1111011111000110110010000010" +
                    "1000100001000100011011101100" +
                    "1011111011000111111110001010" +
                    "1100100011100110100011010101" +
                    "1101100101011000111110101010" +
                    "1111010101111100001011011001" +
                    "1000011000000110010010001100" +
                    "1100110001001101001001010001" +
                    "0101000111101010100010111000" +
                    "1111101010100101010101110010" +
                    "0011111010101010000101101110" +
                    "0101111011011000100000010001" +
                    "0011011110100011001011011001" +
                    "0111000101011011111000000101" +
                    "0101101100010011111101010011" +
                    "0100001101110101010000010100" +
                    "1100110001000011101011000011" +
                    "1101011111001010000101010111" +
                    "0"
            ),
            hash_x = "0666c2bce7f362a2b807d212e9a577f116891a932affd7addec39fbf372c494e",
            hash_y = "6758bccfaf2e47c07756b96edea23aa8d10c33b38220bd1c411af612eeec18ab"
        ),
        TestVector(
            personalization = Personalization.NoteCommitment,
            input_bits = BitArray.fromString(
                "1111111000000101100100100001" +
                    "1001011101101000000100010110" +
                    "0000110010111010111010011001" +
                    "1101100001110011000000110011" +
                    "0101001000001111100001100101" +
                    "0000110011101001100010001100" +
                    "1010001010010110010011101001" +
                    "1101101011001111000011010000" +
                    "1011100111110001011101100000" +
                    "1000010111101101111011000000" +
                    "0011010000000011000100110001" +
                    "0001000100000000001011111111" +
                    "0110000001000111110100000000" +
                    "1011111101001111010100000101" +
                    "1111101100001100010000011111" +
                    "0100000110101011010010001011" +
                    "0100100001001110011011011000" +
                    "0100001111010111011011010110" +
                    "0001011010010100110111111110" +
                    "1100110010010111000011001000" +
                    "0011101010000100010101110100" +
                    "0100000110100001010101010111" +
                    "0110101001001110100011011001" +
                    "0001101011011101101101001101" +
                    "1100010111100100110011011001" +
                    "0110011101110101001111111110" +
                    "1010001111101011101100011001" +
                    "1110000000011101101111011011" +
                    "1011101111001110111001111010" +
                    "1001011010110100001011010010" +
                    "1101000000100000001110011010" +
                    "1111101011001100101111011110" +
                    "0000001110001110110011010010" +
                    "101010010101110110011"
            ),
            hash_x = "130afe02b99375484efb0998f5331d2178e1d00e803049bb0769099420624f5f",
            hash_y = "5e2fc6970554ffe358652aa7968ac4fcf3de0c830e6ea492e01a38fafb68cd71"
        ),
        TestVector(
            personalization = Personalization.NoteCommitment,
            input_bits = BitArray.fromString(
                "1111110110011010011011001110" +
                    "1101101000110011110110100101" +
                    "0111000010101110011000000100" +
                    "1010101100010001001101000110" +
                    "0101011111100101111011000100" +
                    "1111001010100010000000011101" +
                    "0010011111010101111011001001" +
                    "0000111011010111000011001010" +
                    "1001100010101010000101100100" +
                    "0100010011100101000010101111" +
                    "1011001100010000000010101100" +
                    "1111100000001101100001000011" +
                    "1000100100000110101000001100" +
                    "0110101001100010101000100111" +
                    "1101011010001001011110110101" +
                    "1011000111011100000001101000" +
                    "1011110111100110110101011111" +
                    "0010100101011001001010000011" +
                    "0100001010110001010100100101" +
                    "1011001110001011010101011000" +
                    "1000110000000011100011001011" +
                    "1110010000101001011011100110" +
                    "1000110001011101101110000000" +
                    "1111100000000010111000001110" +
                    "1110111100000111010110010100" +
                    "0010111110011010000111001110" +
                    "1101000010111100010101101001" +
                    "0111001111000110111111000011" +
                    "0100010010111000000101100100" +
                    "1111100010111001101110101111" +
                    "1100110110110111110000111000" +
                    "1001110100010010100010011110" +
                    "0100011011110000100111111011" +
                    "1110000111011001110001"
            ),
            hash_x = "67914ebd539961b70f468fa23d4cb42133693a8ac57cd35a1e6369fe34fbedf7",
            hash_y = "44770870c0f0cfe59a10df95d6c21e6f1514a2f464b66377599438c126052d9f"
        ),
        TestVector(
            personalization = Personalization.MerkleTree_0,
            input_bits = BitArray.fromString("000000"),
            hash_x = "62454a957289b3930d10f3def0d512cfe0ef3de06421321221af3558de9d481d",
            hash_y = "0279f0aebfb66e53ff69fba16b6608dbf4319b944432f45c6e69a3dbd1f7b330"
        ),
        TestVector(
            personalization = Personalization.MerkleTree_0,
            input_bits = BitArray.fromString("0000000"),
            hash_x = "283c7880f35179e201161402d9c4556b255917dbbf0142ae60519787d36d4dea",
            hash_y = "648224408b4b83297cd0feb4cdc4eeb224237734931145432793bcd414228dc4"
        ),
        TestVector(
            personalization = Personalization.MerkleTree_0,
            input_bits = BitArray.fromString("0000001"),
            hash_x = "1f1086b287636a20063c9614db2de66bb7d49242e88060956a5e5845057f6f5d",
            hash_y = "6b1b395421dde74d53341caa9e01f39d7a3138efb9b57fc0381f98f4868df622"
        ),
        TestVector(
            personalization = Personalization.MerkleTree_0,
            input_bits = BitArray.fromString("000000100"),
            hash_x = "1f1086b287636a20063c9614db2de66bb7d49242e88060956a5e5845057f6f5d",
            hash_y = "6b1b395421dde74d53341caa9e01f39d7a3138efb9b57fc0381f98f4868df622"
        ),
        TestVector(
            personalization = Personalization.MerkleTree_0,
            input_bits = BitArray.fromString(
                "0000001101001110010010110111" +
                    "0001111001101010111010111000" +
                    "0100001001101001110011011001" +
                    "1100111011101010001101101011" +
                    "0011000101011101000110001110" +
                    "1110000110110010101110101101" +
                    "110111111001000110"
            ),
            hash_x = "20d2b1b0551efe511755d564f8da4f5bf285fd6051331fa5f129ad95b318f6cd",
            hash_y = "2834d96950de67ae80e85545f8333c6e14b5cf5be7325dac768f401e6edd9544"
        ),
        TestVector(
            personalization = Personalization.MerkleTree_0,
            input_bits = BitArray.fromString(
                "0000000010000110001100111101" +
                    "1001011110011001110101101111" +
                    "1110011110000000000110011100" +
                    "0110111110010010110010101111" +
                    "1101001011000101001100101010" +
                    "0010011100011011011101110100" +
                    "010111101111011010000"
            ),
            hash_x = "01f4850a0f40e07186fee1f0a276f52fb12cffe05c18eb2aa18170330a93c555",
            hash_y = "19b0807358e7c8cba9168815ec54c4cd76997c34c592607d172151c48d5377cb"
        ),
        TestVector(
            personalization = Personalization.MerkleTree_0,
            input_bits = BitArray.fromString(
                "0000001111100001011111111000" +
                    "0101100011111111001110101001" +
                    "0000101101111001010010111010" +
                    "0111011111100111110010010101" +
                    "0100101110100001101101111101" +
                    "1001011111000110101011111101" +
                    "0011010110101001101100"
            ),
            hash_x = "26dd81a3ffa37452c6a932d41eb4f2e0fedd531e9af8c2a7935b91dff653879d",
            hash_y = "2fc7aebb729ef5cabf0fb3f883bc2eb2603093850b0ec19c1a3c08b653e7f27f"
        ),
        TestVector(
            personalization = Personalization.MerkleTree_0,
            input_bits = BitArray.fromString(
                "0000000100011111100000000101" +
                    "0110011100001110010001010010" +
                    "1110010011000011010101010111" +
                    "1001011111100000001110011101" +
                    "0101010101010000001011100000" +
                    "0110110000100111101010000101" +
                    "1101001100111110110111110000" +
                    "0011001111000001100101111110" +
                    "1001001101011101001110100110" +
                    "0111010100011010010110110001" +
                    "0101011011011010100110100010" +
                    "0101100000000100100010101011" +
                    "0110001001101111100110010111" +
                    "0000000011101111011100100000" +
                    "0110111100000100010100101010" +
                    "1000110010111010111001110100" +
                    "0000100110110000111100000101" +
                    "0000000011011101001010010101" +
                    "0011101101000000101000111000" +
                    "0100101011110101100100010011" +
                    "0001101101010111100011111010" +
                    "0011010011011100101011010110" +
                    "1001001101001101100000011010" +
                    "1010001000111010100100101011" +
                    "0000100101000011110010110001" +
                    "0101110110101101001101001111" +
                    "1110001100111101101001011001"
            ),
            hash_x = "1111740552773b00aa6a2334575aa94102cfbd084290a430c90eb56d6db65b85",
            hash_y = "6560c44b11683c20030626f89456f78a53ae8a89f565956a98ffc554b48fbb1a"
        ),
        TestVector(
            personalization = Personalization.MerkleTree_0,
            input_bits = BitArray.fromString(
                "0000000010011010110111011010" +
                    "1000010000001100101010101000" +
                    "0100100010100101111000011111" +
                    "0001001101011110010110010111" +
                    "1100000100011110111110001000" +
                    "0110111011100111010001001011" +
                    "0100000100001101000110110100" +
                    "0111101000101101011100010111" +
                    "1101101011000111011010101111" +
                    "1010010110100010101011000000" +
                    "0000010010101101011011100001" +
                    "0111111110111100001100100100" +
                    "0001110000101000110101111100" +
                    "1001000010101111001101010011" +
                    "0110101000001010101110001100" +
                    "0001101111000010011111110101" +
                    "1110001000010100001000011011" +
                    "0000101101111100100100101000" +
                    "0111111101000010110111011001" +
                    "1000010011011001010100111110" +
                    "1100010110101110110011110101" +
                    "1000011011100010111011010010" +
                    "1010110001110111100001010110" +
                    "1111011111110001000001100010" +
                    "1000101100011101101001101101" +
                    "1011010010101111011110001011" +
                    "1110110100100110100000111100" +
                    "0"
            ),
            hash_x = "429349ea9b5f8163bcda3014b3e15554df5173353fd73f315a49360c97265f68",
            hash_y = "188774bb6de41eba669be5d368942783f937acf2f418385fc5c78479b0a405ee"
        ),
        TestVector(
            personalization = Personalization.MerkleTree_0,
            input_bits = BitArray.fromString(
                "0000000010000011010000000001" +
                    "0010111101001010101011011100" +
                    "0001011111100011111110110011" +
                    "0001101101010110010000101001" +
                    "0010011010100011111010100001" +
                    "1011011111100000101011010001" +
                    "1011111001110011011000100100" +
                    "0000000000010110000000100000" +
                    "0100011111101010010011000111" +
                    "0010111100111101111110010000" +
                    "1011011011001100001111101001" +
                    "1011111000100110000011101110" +
                    "1110110010010110010001110110" +
                    "1010001101101011100000110011" +
                    "0110101110101001001001110000" +
                    "0111101011101111101000000001" +
                    "0010100100000100010001101011" +
                    "0011001001110001010010001000" +
                    "0011101101000001011100001111" +
                    "0011101010111000111100100101" +
                    "1110001100001001011000011101" +
                    "1000110100110011010111000001" +
                    "1111000101001001100001110001" +
                    "0010001111011010010001010111" +
                    "0101111011001100110010111111" +
                    "0011001110110110001101110011" +
                    "0001010011000010001001101111" +
                    "0100110111011010111101001010" +
                    "0110000110011101000011011111" +
                    "0010010100011110110000010011" +
                    "0001100001110111110000011001" +
                    "0101110111110001101101101110" +
                    "0111001100111000010010100000" +
                    "001100010111100100110"
            ),
            hash_x = "00e827f3ed136f3c91c61c97ab9b7cca0ea53c20e47abb5e226ede297bdd5f37",
            hash_y = "315cc00a54972df6a19f650d3fab5f2ad0fb07397bacb6944568618f2aa76bf6"
        ),
        TestVector(
            personalization = Personalization.MerkleTree_0,
            input_bits = BitArray.fromString(
                "0000000011100101011100111111" +
                    "0011011101000011101111001101" +
                    "1010111010101010110011101110" +
                    "0001111001100100110111100011" +
                    "1000010101111101000100101010" +
                    "0100011011010010110111111101" +
                    "0100010111010111110001001000" +
                    "1001000010101101001010101110" +
                    "0110111001001111100011000101" +
                    "0011110111011010111011100100" +
                    "0010010001100111001010000110" +
                    "1101100011100001101011101000" +
                    "0000001010001000000101111010" +
                    "1001001011001011001111100011" +
                    "0001010010100100011010000000" +
                    "0100110010001001001001001011" +
                    "1111110100000000101100001001" +
                    "1000000100101101001001001001" +
                    "0110101011010100101010111110" +
                    "1010010101000111010100010011" +
                    "1001011101000111010110010011" +
                    "0010011111010100011110111000" +
                    "0100111000101001101100000010" +
                    "1111111100010010111110000000" +
                    "1011110000010100110100110111" +
                    "1011011100101111001000011110" +
                    "0011101010101010110011001010" +
                    "0011101000011111101000100111" +
                    "0000010010011110011101110001" +
                    "0001001110110110001010111001" +
                    "0111000100100001110100011110" +
                    "1101101000000100111101111010" +
                    "1000110011001110011000100111" +
                    "1010100001000010101000"
            ),
            hash_x = "3ee50557c4aa9158c4bb9d5961208e6c62f55c73ad7c7695a0eba0bcb6d83d05",
            hash_y = "1b1a2be6e47688828aeadf2d37db298eac0c2736c2722b227871fdeeee29de33"
        ),
        TestVector(
            personalization = Personalization.MerkleTree_34,
            input_bits = BitArray.fromString("010001"),
            hash_x = "61f8e2cb8e945631677b450d5e5669bc6b5f2ec69b321ac550dbe74525d7ac9a",
            hash_y = "4e11951ab9c9400ee38a18bd98cdb9453f1f67141ee9d9bf0c1c157d4fb34f9a"
        ),
        TestVector(
            personalization = Personalization.MerkleTree_34,
            input_bits = BitArray.fromString("0100010"),
            hash_x = "27fa1e296c37dde8448483ce5485c2604d1d830e53812246299773a02ecd519c",
            hash_y = "08e499113675202cb42b4b681a31430814edebd72c5bb3bc3bfedf91fb0605df"
        ),
        TestVector(
            personalization = Personalization.MerkleTree_34,
            input_bits = BitArray.fromString("0100011"),
            hash_x = "52112dd7a4293d049bb011683244a0f957e6ba95e1d1cf2fb6654d449a6d3fbc",
            hash_y = "2ae14ecd81bb5b4489d2d64b5d2eb92a684087b28dd9a4950ecdb78c014e178c"
        ),
        TestVector(
            personalization = Personalization.MerkleTree_34,
            input_bits = BitArray.fromString("010001100"),
            hash_x = "52112dd7a4293d049bb011683244a0f957e6ba95e1d1cf2fb6654d449a6d3fbc",
            hash_y = "2ae14ecd81bb5b4489d2d64b5d2eb92a684087b28dd9a4950ecdb78c014e178c"
        ),
        TestVector(
            personalization = Personalization.MerkleTree_34,
            input_bits = BitArray.fromString(
                "0100010101010000100010000110" +
                    "0011111100000100011010100101" +
                    "1111011110010111001000101110" +
                    "1000101110000001100100110100" +
                    "0111111100101110110101110010" +
                    "1011011010011010100011110010" +
                    "001001110110000110"
            ),
            hash_x = "544a0b44c35dca64ee806d1af70b7c44134e5d86efed413947657ffd71adf9b2",
            hash_y = "5ddc5dbf12abbbc5561defd3782a32f450b3c398f52ff4629677e59e86e3ab31"
        ),
        TestVector(
            personalization = Personalization.MerkleTree_34,
            input_bits = BitArray.fromString(
                "0100011000110001011100010011" +
                    "0010000000110010101100111101" +
                    "0010011101101011011010111111" +
                    "0111001110011011100101100100" +
                    "0010111111010011110011110110" +
                    "1110001011111110001100010011" +
                    "100010111110000011101"
            ),
            hash_x = "6cb6490ccb0ca9ccd657146f58a7b800bc4fb2556ee37861227ee8fda724acfb",
            hash_y = "05c6fe100926f5cc441e54e72f024b6b12c907f2ec5680335057896411984c9f"
        ),
        TestVector(
            personalization = Personalization.MerkleTree_34,
            input_bits = BitArray.fromString(
                "0100010110011001111010111101" +
                    "0110111001000101111010110011" +
                    "0000000101100101100010000111" +
                    "1001111010000101001010100100" +
                    "0100101101101001001001000111" +
                    "0000010010010011101010101001" +
                    "0001101011100111010100"
            ),
            hash_x = "40901e2175cb7f06a00c676d54d90e59fd448f11cbbc5eb517f9fea74b795ce2",
            hash_y = "42d512891f91087310c9bc630c8d0ecc014596f884fd6df55dada8195ed726de"
        ),
        TestVector(
            personalization = Personalization.MerkleTree_34,
            input_bits = BitArray.fromString(
                "0100011100110011011001000110" +
                    "0010100111110011100000100001" +
                    "1111010001011001000000100100" +
                    "1001111111011010000111010001" +
                    "1111111001111111010001011000" +
                    "1000000011001011110000001001" +
                    "1000100111001100000100111100" +
                    "0111011110010000101110101011" +
                    "1110101000000000110001000010" +
                    "0010101011010001010101010100" +
                    "0111011000110011011101110001" +
                    "1000010010001011110111111001" +
                    "1110010100100110101111100110" +
                    "1100011000010110110110110101" +
                    "0111111010010111000110011100" +
                    "1101000100011111110110001100" +
                    "1010010100010101101010001000" +
                    "1001101010110110111010000110" +
                    "0111111101001100110101010011" +
                    "1011010001100111010010110010" +
                    "1001000101010100100010100100" +
                    "1000001100010001100110100110" +
                    "1110111000101000010011000110" +
                    "1100001101101101001100001001" +
                    "1001110011101000101101010100" +
                    "0001001101101001001010111011" +
                    "0111001000000111010101000101"
            ),
            hash_x = "66a433542419f1a086ed0663b0e8df2ece9a04065f147896976baba1a916b6dc",
            hash_y = "203bd3672522e1d3c86fa6b9f3b58f20199a4216adfd40982add13a856f6f3de"
        ),
        TestVector(
            personalization = Personalization.MerkleTree_34,
            input_bits = BitArray.fromString(
                "0100010010011000100001010011" +
                    "1010111000010011000010000111" +
                    "1101000000001010100001110111" +
                    "1110011111010110001111011110" +
                    "1101000101011001000101000101" +
                    "0000010001001111110101101111" +
                    "0110011100100001011101011100" +
                    "1100011011110100110111111011" +
                    "1101001111001001001011000001" +
                    "1100011110111001100000100011" +
                    "0001101001000101110001110000" +
                    "0010001100010101101011110100" +
                    "0111100000101010000100010100" +
                    "1011110101010001011001100011" +
                    "1000010010001011110110001101" +
                    "1011100000001011010100010011" +
                    "0010111100101100110101001000" +
                    "1010101000100100101111010001" +
                    "0100101110010000111011110000" +
                    "0000111110101011100001101001" +
                    "0110101011100001011001100010" +
                    "0110011000110111000011111001" +
                    "1011110110110100101011101001" +
                    "1111101110000011011101110010" +
                    "1000100101101011100011111100" +
                    "1001110001101100000011000000" +
                    "1011000101110111011001110000" +
                    "1"
            ),
            hash_x = "119db3b38086c1a3c6c6f53c529ee62d9311d69c2d8aeeafa6e172e650d3afda",
            hash_y = "72287540be7d2b0f58f5c73eaa53c55bea6b79dd79873b4e47cc11787bb9a15d"
        ),
        TestVector(
            personalization = Personalization.MerkleTree_34,
            input_bits = BitArray.fromString(
                "0100010011000011011010110111" +
                    "1101101100100110110011000101" +
                    "1111101111100100010100111110" +
                    "0011010001001000001000110010" +
                    "1101000000000010100001110000" +
                    "0100101010100101100101101010" +
                    "0111101010010110011101010101" +
                    "1010000011010011100111010110" +
                    "1101110100100010110111101010" +
                    "1011001100000001110110011111" +
                    "0000000011011011110101000111" +
                    "0101010101000101010110010100" +
                    "1011001111101010001110010010" +
                    "1000110001101000111010111000" +
                    "1100101011001000000111100111" +
                    "1000010001010011011100000110" +
                    "0111110110111110000010011101" +
                    "0000100000111110000010101011" +
                    "0010001111010011100011011110" +
                    "1011110001000011010010011000" +
                    "1000000011100100011101010100" +
                    "1000000100000001010010111111" +
                    "0101000001011110010000100111" +
                    "1011001000100010010110001010" +
                    "0011100001111101000001001110" +
                    "1000010100001000011111001110" +
                    "1001101000011100001110110110" +
                    "0111101001001010010001100110" +
                    "0011000110110110100001001111" +
                    "1011110011001110101110111111" +
                    "0100000000110110011100011110" +
                    "1000000010001010000000001010" +
                    "0011110011011111100101110111" +
                    "100010101111011111100"
            ),
            hash_x = "446efdcf89b70ba2b03427a0893008181d0fc4e76b84b1a500d7ee523c8e3666",
            hash_y = "125ee0048efb0372b92c3c15d51a7c5c77a712054cc4fdd0774563da46ec7289"
        ),
        TestVector(
            personalization = Personalization.MerkleTree_34,
            input_bits = BitArray.fromString(
                "0100010011101110010101111111" +
                    "1000101000110100010110010111" +
                    "0000101101110100100101101110" +
                    "1100010001100000111011110100" +
                    "1111000110101011111101011010" +
                    "0011100101111111001111010111" +
                    "0011000010011001011000110011" +
                    "1111111110110011101100010110" +
                    "0001000100110100100111100110" +
                    "0101110011111101111110101110" +
                    "1110011100000011011100111010" +
                    "0100010011111101000100101100" +
                    "0001100100100111001010011101" +
                    "1000111011111011111101101111" +
                    "0111101100011001000100100110" +
                    "0000111111101011110001001110" +
                    "0010110111010100011001000101" +
                    "1101010001111110110001010011" +
                    "1100110111001101011111001101" +
                    "1011110101000110000101011010" +
                    "0011101001101000001111010010" +
                    "1111001010000000000110000011" +
                    "1110000000101111000110011011" +
                    "1011101100010011100111010011" +
                    "1001001000010011100100010000" +
                    "0110101001110100110110001101" +
                    "0011001000101010000000100101" +
                    "0010000011101100110000001100" +
                    "1110010011011110110111111010" +
                    "0100110101100001100110001101" +
                    "0011111100011000011000010100" +
                    "0000010000010010100110011101" +
                    "1110111011100001000011010110" +
                    "1001001001001111101101"
            ),
            hash_x = "72723bf0573bcb4b72d4184cfeb707d9556b7f705f56a4652707a36f2edf10f7",
            hash_y = "3a7f0999a6a1393bd49fc82302e7352e01176fbebb0192bf5e6ef39eb8c585ad"
        ),
        TestVector(
            personalization = Personalization.MerkleTree_27,
            input_bits = BitArray.fromString(
                "1101101101101101101101101101" +
                    "1011011011011011011011011011" +
                    "0110110110110110110110110110" +
                    "1101101101101101101101101101" +
                    "1011011011011011011011011011" +
                    "0110110110110110110110110110" +
                    "110110110110110110110"
            ),
            hash_x = "414f6ba05f6b92da1f9051950769e1083d05615def32b016ae424309828a11f4",
            hash_y = "471d2109656afcb96d0609b371b132b97efcf72c6051064dd19fdc004799bfa9"
        ),
        TestVector(
            personalization = Personalization.MerkleTree_36,
            input_bits = BitArray.fromString(
                "0010010010010010010010010010" +
                    "0100100100100100100100100100" +
                    "1001001001001001001001001001" +
                    "0010010010010010010010010010" +
                    "0100100100100100100100100100" +
                    "1001001001001001001001001001" +
                    "001001001001001001001"
            ),
            hash_x = "62d6fe1e373225a5695f3115aed8265c59e2d6275ceef6bbc53fde3fc6594024",
            hash_y = "407275be7d5a4c48204c8d83f5b211d09a2f285d4f0f87a928d4de9a6338e1d1"
        ),
        TestVector(
            personalization = Personalization.MerkleTree_0,
            input_bits = BitArray.fromString(
                "0000000000000000000000000000" +
                    "0000000000000000000000000000" +
                    "0000000000000000000000000000" +
                    "0000000000000000000000000000" +
                    "0000000000000000000000000000" +
                    "0000000000000000000000000000" +
                    "000000000000000000000"
            ),
            hash_x = "1116a934f26b57a2c9daa6f25ac9b1a8f9dacddba30f65433ac021bf39a6bfdd",
            hash_y = "407275be7d5a4c48204c8d83f5b211d09a2f285d4f0f87a928d4de9a6338e1d1"
        ),
        TestVector(
            personalization = Personalization.NoteCommitment,
            input_bits = BitArray.fromString(
                "1111111111111111111111111111" +
                    "1111111111111111111111111111" +
                    "1111111111111111111111111111" +
                    "1111111111111111111111111111" +
                    "1111111111111111111111111111" +
                    "1111111111111111111111111111" +
                    "111111111111111111111"
            ),
            hash_x = "329e3bb2ca31ea6e13a986730237f6fd16b842a510cbabe851bdbcf57d75ee0d",
            hash_y = "471d2109656afcb96d0609b371b132b97efcf72c6051064dd19fdc004799bfa9"
        )
    )

    // Test from Zinc, input is 42 + NoteCommitment

    val altBabyJubjub = listOf(

        TestVector(
            personalization = Personalization.NoteCommitment,
            input_bits = BitArray.fromString("11111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010"),
            hash_x = "d799568a2faaebce79310bbb84e454bf934e61f1879c8095ac7c0a45905d2d3",
            hash_y = "40d2992106b2c6e8c2f0b38e5238fbd9b46ef042d91011a5566044f2943ac65"
        )
    )

    val altBabyJubjubBytes = listOf(

        TestVector(
            personalization = Personalization.NoteCommitment,
            input_bits = BitArray(arrayOf(2).map { it.toByte() }.toByteArray()),
            hash_x = "16eaafa8bf93f1f27186cb8771b852a9a3570830eb263c0c39523ab90674e6",
            hash_y = "b235463d147fc1042a120bdff0a35668ad1d9b8c265c48976086d8807abdfb6"
        ),

        TestVector(
            personalization = Personalization.NoteCommitment,
            input_bits = BitArray(arrayOf(2, 2).map { it.toByte() }.toByteArray()),
            hash_x = "6273578ac58d3c2f79f2e1c295a5ed3a74a16f1e35661c7bc6592813201835d",
            hash_y = "187681a9397880994ca3584285e4dc7e9d0aa6fa42e0ff08b1dcb17dc8f3900e"
        ),

        TestVector(
            personalization = Personalization.NoteCommitment,
            input_bits = BitArray(arrayOf(0, 0, 0, 2).map { it.toByte() }.toByteArray()),
            hash_x = "1ceb95bf288ae7358b559348b56fd36abf9326af4ffe64e2d2b6210c445344b0",
            hash_y = "159c5863b7f2ad2e3df3c3798625bf2c4a6f7046ea6053a856774e0502de7b2"
        ),

        TestVector(
            personalization = Personalization.NoteCommitment,
            input_bits = BitArray(arrayOf(2, 2, 2, 2, 2, 2, 2, 2).map { it.toByte() }.toByteArray()),
            hash_x = "12a71044d9154787840999c1654d30f1a19422c09897c1511c67068b4f1ec557",
            hash_y = "6f45fb86387cbf7342be80e0b924420fb42d44c73781d1d07075bb8d9d5fbf9"
        ),

        TestVector(
            personalization = Personalization.NoteCommitment,
            input_bits = BitArray(arrayOf(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2).map { it.toByte() }.toByteArray()),
            hash_x = "1651027d8491db883b96a377b0cc885673415f012c2a5b92d3b146e369843257",
            hash_y = "16b09c34ed5232f658e4c38400bd7b6d0cb9396e10488d4a219d96914e2b438a"
        ),

        TestVector(
            personalization = Personalization.NoteCommitment,
            input_bits = BitArray(arrayOf(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2).map { it.toByte() }.toByteArray()),
            hash_x = "104058a28c52d2db3ddb540f03d2c0c798244daee3df59067a101f7679a69d9a",
            hash_y = "2d6c50a6937223a1f3dd7f90394809356e574f5158f9f6044a5bb4ea3aec81a8"
        ),

        TestVector(
            personalization = Personalization.NoteCommitment,
            input_bits = BitArray(arrayOf(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2).map { it.toByte() }.toByteArray()),
            hash_x = "1b483fbf06bf1a7f139ebed40ede666708616fadad90ab99a1475ab4dea7227",
            hash_y = "27a8660e4da972407d3156e2fd06de6ae0226459de30da24473e72b079ec836e"
        )
    )

    data class TestVector(
        /**
         * we store personalization info just in case although it is already joined into 'input_bits'
         */
        val personalization: String,
        val input_bits: BitArray,
        val hash_x: String,
        val hash_y: String
    )

    object Personalization {
        const val NONE = ""
        const val NoteCommitment = "111111"
        const val MerkleTree_0 = ""
        const val MerkleTree_34 = ""
        const val MerkleTree_36 = ""
        const val MerkleTree_27 = ""
    }
}
